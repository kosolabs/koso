### Healthz
GET http://localhost:3000/healthz
Content-Type: application/json

### Profile
GET http://localhost:3000/api/profile
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

### Projects
GET http://localhost:3000/api/projects
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

### Project Dupes
GET http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

### Create Dupe Candidate
POST http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "task1Id": "task-abc-123",
  "task2Id": "task-def-456", 
  "similarity": 0.9249530206277398
}

### === Individual Dupe Management ===

### Get Individual Dupe
GET http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes/{{$dotenv dupeId}}
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

### Mark Dupe as "Is Duplicate" (true)
PATCH http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes/{{$dotenv dupeId}}
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "resolution": true
}

### Mark Dupe as "Not Duplicate" (false)
PATCH http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes/{{$dotenv dupeId}}
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "resolution": false
}

### Clear Dupe Resolution (set to null)
PATCH http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes/{{$dotenv dupeId}}
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "resolution": null
}

### === Additional Test Data ===

### Create Another Dupe Candidate for Testing
POST http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "task1Id": "task-xyz-789",
  "task2Id": "task-uvw-012", 
  "similarity": 0.85
}

### === Error Testing ===

### Test 404 - Get Non-existent Dupe
GET http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes/non-existent-dupe-id
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

### Test 404 - Update Non-existent Dupe
PATCH http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes/non-existent-dupe-id
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "resolution": true
}

### Test 400 - Create Dupe with Same Task IDs
POST http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "task1Id": "task-same-123",
  "task2Id": "task-same-123", 
  "similarity": 0.9
}

### Test 400 - Create Dupe with Invalid Similarity (> 1)
POST http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "task1Id": "task-invalid-123",
  "task2Id": "task-invalid-456", 
  "similarity": 1.5
}

### Test 400 - Create Dupe with Invalid Similarity (< 0)
POST http://localhost:3000/api/projects/{{$dotenv projectId}}/dupes
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "task1Id": "task-invalid-123",
  "task2Id": "task-invalid-456", 
  "similarity": -0.1
}

### Notifiers
POST http://localhost:3000/api/notifiers
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "message": "游꾸 Some *italicized* text with a link:\n[Koso profile](https://koso.app/profile)"
}

#### Discord
POST http://localhost:3000/api/notifiers
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "message": "游꾸 Some *italicized* text with a link:\n[Koso profile](https://koso.app/profile)",
  "notifiers": ["discord"]
}

#### Slack
POST http://localhost:3000/api/notifiers
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "message": "游꾸 Some *italicized* text with a link:\n[Koso profile](https://koso.app/profile)",
  "notifiers": ["slack"]
}

#### Telegram
POST http://localhost:3000/api/notifiers
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "message": "游꾸 Some *italicized* text with a link:\n[Koso profile](https://koso.app/profile)",
  "notifiers": ["telegram"]
}


### Agent

#### Generate Context
POST http://localhost:3000/api/gemini/context
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

{
  "projectId": "{{$dotenv projectId}}",
  "ghOwner": "kosolabs",
  "ghRepo": "koso"
}

#### Summarize Task
GET http://localhost:3000/api/anthropic/summarize?simulate=true&projectId={{$dotenv projectId}}&taskId={{$dotenv iterationTaskId}}&model=claude-sonnet-4-20250514
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

####
GET http://localhost:3000/api/anthropic/summarize?projectId={{$dotenv projectId}}&taskId={{$dotenv iterationTaskId}}&model=claude-sonnet-4-20250514
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

#### Breakdown Task
GET http://localhost:3000/api/anthropic/breakdown?simulate=true&projectId={{$dotenv projectId}}&taskId={{$dotenv iterationTaskId}}&model=claude-sonnet-4-20250514
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}

####
GET http://localhost:3000/api/anthropic/breakdown?projectId={{$dotenv projectId}}&taskId={{$dotenv iterationTaskId}}&model=claude-sonnet-4-20250514
Content-Type: application/json
Authorization: Bearer {{$dotenv token}}
