name: Zero CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    paths:
      - zero/**
      - kosolib/**
      - .github/workflows/zero-ci.yml
concurrency:
  group: zero-ci-workflow-${{ github.workflow }}-ref-${{ github.ref }}-${{ github.event_name }}
  # Cancel in-progress workflows for PRs (but not main or tag builds).
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' &&  github.event_name != 'workflow_dispatch' }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      zero: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            zero:
              - 'zero/**'
              - 'kosolib/**'
              - '.github/workflows/zero-ci.yml'

  # Generate matrix configurations for the build-and-test-tauri job.
  # This allows for a reduced configuration set for pull requests, optimizing build times
  # while building all platforms for release.
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - id: set-matrix
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            let res = [
             {
                platform: "macos-latest",
                target: "aarch64-apple-darwin",
                args: "--target aarch64-apple-darwin",
              }
            ];
            if (context.eventName == "pull_request") {
              return res;
            }
            return res.concat([
               {
                platform: "ubuntu-latest",
                target: "x86_64-unknown-linux-gnu",
                args: "",
              }
              // {
              //   platform: "macos-latest",
              //   target: "x86_64-apple-darwin",
              //   args: "--target x86_64-apple-darwin",
              // },
              // {
              //   platform: "windows-latest",
              //   target: "x86_64-pc-windows-msvc",
              //   args: "",
              // },
            ]);

  build-and-test-tauri:
    needs: [define-matrix, changes]
    if: ${{ needs.changes.outputs.zero != '[]' }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./zero
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          package_json_file: zero/package.json

      - name: Setup Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: zero/.nvmrc
          cache: "pnpm"
          cache-dependency-path: zero/pnpm-lock.yaml

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c # master
        with:
          toolchain: stable
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust build cache
        uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
        with:
          workspaces: "./ -> target"
      - run: RUST_BACKTRACE=full RUST_BACKTRACE=1 cargo test
        working-directory: ./zero/src-tauri
      - run: cargo clippy -- -D warnings
        working-directory: ./zero/src-tauri
      - run: cargo fmt -- --check
        working-directory: ./zero/src-tauri

      - name: Install frontend dependencies
        run: pnpm install
      - run: pnpm test

      # Build the tauri app when we are NOT performing a release.
      # Mutually exclusive with the build/archive steps below.
      - name: Build tauri app (non-release)
        id: build-non-release-tauri
        uses: tauri-apps/tauri-action@94571df7fd79dbe2aee6d279c0a6b66d086d3b3b # v0.5.19
        if: ${{ github.event_name != 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./zero"
          args: ${{ matrix.args }}
      - name: Archive tauri artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ github.event_name != 'workflow_dispatch' }}
        with:
          name: tauri-app-${{ matrix.target }}
          path: ${{ join(fromJson(steps.build-non-release-tauri.outputs.artifactPaths), fromJson('"\n"')) }}

      # Build the tauri app when we are performing a release.
      # Mutually exclusive with the build/archive steps above.
      - name: Build and publish tauri app (release)
        id: build-release-tauri
        uses: tauri-apps/tauri-action@94571df7fd79dbe2aee6d279c0a6b66d086d3b3b # v0.5.19
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./zero"
          args: ${{ matrix.args }}
          tagName: zero-v__VERSION__
          releaseName: "Zero v__VERSION__"
          releaseDraft: true
          prerelease: true
      - name: Archive tauri artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          name: tauri-app-${{ matrix.target }}
          path: ${{ join(fromJson(steps.build-release-tauri.outputs.artifactPaths), fromJson('"\n"')) }}

  build-and-test-tauri-complete:
    needs: [build-and-test-tauri, changes]
    if: ${{ needs.changes.outputs.zero != '[]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Complete
        run: echo "build-and-test-tauri-complete"
