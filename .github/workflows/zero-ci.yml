name: Zero CI
on:
  pull_request:
  push:
    tags:
      - "zero-v*"
    branches:
      - main
concurrency:
  group: zero-ci-workflow-${{ github.workflow }}-ref-${{ github.ref }}
  # Cancel in-progress workflows for PRs (but not main).
  cancel-in-progress: ${{ github.ref != 'refs/heads/main'}}
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            target: "aarch64-apple-darwin"
            args: "--target aarch64-apple-darwin"
          # - platform: "macos-latest" # for Intel based macs.
          #   target: "x86_64-apple-darwin"
          #   args: "--target x86_64-apple-darwin"
          # - platform: "ubuntu-22.04"
          #   target: "x86_64-unknown-linux-gnu"
          #   args: ""
          # - platform: "windows-latest"
          #   target: "x86_64-pc-windows-msvc"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./zero
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          package_json_file: zero/package.json

      - name: Setup Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version-file: zero/.nvmrc
          cache: "pnpm"
          cache-dependency-path: zero/pnpm-lock.yaml

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@315e265cd78dad1e1dcf3a5074f6d6c47029d5aa # master
        with:
          toolchain: stable
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust build cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          workspaces: "./zero/src-tauri -> target"

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install

      - name: Build tauri app
        id: build-tauri
        uses: tauri-apps/tauri-action@8c3e0753aa015d00d03631d6d4f64ad59489251d # v0.5.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./zero"
          tagName: ${{ (startsWith(github.ref, 'refs/tags/zero-v') && github.ref) || ''}}
          releaseName: "Zero v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Archive tauri artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: tauri-app-${{ matrix.target }}
          path: ${{ join(fromJson(steps.build-tauri.outputs.artifactPaths), fromJson('"\n"')) }}
