name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  cargo:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      DATABASE_URL: postgres://postgres:password@localhost:5432/postgres

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "backend"
          shared-key: "backend-build"
      - name: Install sqlx-cli
        uses: baptiste0928/cargo-install@v3
        with:
          crate: sqlx-cli
          args: --no-default-features --features rustls,postgres
          version: latest
      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh
      - run: cargo test
      - run: cargo clippy -- -D warnings
      - run: cargo fmt -- --check
  npm:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: Linux-playwright-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: Linux-playwright-
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npm run build
      - run: npm run check
      - run: npm run lint
      - run: npm run test

      # The following steps do much of the same work as the backend
      # "cargo" job above to configure rust, setup the database
      # and run a build. It'd be nice to avoid this somehow, but
      # the rate of change is low enough that it's not too important.
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "backend"
          shared-key: "backend-build"
      - name: Install sqlx-cli
        uses: baptiste0928/cargo-install@v3
        with:
          crate: sqlx-cli
          args: --no-default-features --features rustls,postgres
          version: latest
      - name: Migrate database
        working-directory: ./backend
        run: SKIP_DOCKER=true ../backend/scripts/init_db.sh
      - name: Start backend
        working-directory: ./backend
        run: |
          cargo build
          ./scripts/run_dev.sh &
          curl --head -X GET --retry 30 --retry-connrefused --retry-delay 1 http://localhost:3000

      # Run the playwright tests that depend on the backend started above.
      - run: CI=true npx playwright test
